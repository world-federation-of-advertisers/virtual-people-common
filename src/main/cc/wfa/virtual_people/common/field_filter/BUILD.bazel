load("@rules_cc//cc:defs.bzl", "cc_library")

package(default_visibility = ["//visibility:public"])

_INCLUDE_PREFIX = "/src/main/cc"

cc_library(
    name = "field_filter",
    srcs = [
        "and_filter.cc",
        "any_in_filter.cc",
        "equal_filter.cc",
        "field_filter.cc",
        "gt_filter.cc",
        "has_filter.cc",
        "in_filter.cc",
        "lt_filter.cc",
        "not_filter.cc",
        "or_filter.cc",
        "partial_filter.cc",
        "true_filter.cc",
    ],
    hdrs = [
        "and_filter.h",
        "any_in_filter.h",
        "equal_filter.h",
        "field_filter.h",
        "gt_filter.h",
        "has_filter.h",
        "in_filter.h",
        "lt_filter.h",
        "not_filter.h",
        "or_filter.h",
        "partial_filter.h",
        "true_filter.h",
    ],
    strip_include_prefix = _INCLUDE_PREFIX,
    deps = [
        "//src/main/cc/wfa/virtual_people/common/field_filter/utils:field_util",
        "//src/main/cc/wfa/virtual_people/common/field_filter/utils:integer_comparator",
        "//src/main/cc/wfa/virtual_people/common/field_filter/utils:message_filter_util",
        "//src/main/cc/wfa/virtual_people/common/field_filter/utils:type_convert_util",
        "//src/main/cc/wfa/virtual_people/common/field_filter/utils:values_parser",
        "//src/main/proto/wfa/virtual_people/common:field_filter_cc_proto",
        "@com_google_absl//absl/container:flat_hash_set",
        "@com_google_absl//absl/memory",
        "@com_google_absl//absl/status",
        "@com_google_absl//absl/status:statusor",
        "@com_google_absl//absl/strings",
        "@com_google_protobuf//:protobuf",
        "@wfa_common_cpp//src/main/cc/common_cpp/macros",
    ],
)
